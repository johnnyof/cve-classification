from __future__ import absolute_import
from __future__ import division
from __future__ import print_function


import tensorflow as tf

from datasets import dataset_factory
from deployment import model_deploy
from nets import nets_factory
from preprocessing import preprocessing_factory


slim = tf.contrib.slim

################################################################################
train_log_dir = ./tmp/cve_diseases-models/test
dataset_dir = "./tmp"

################################################################################
if not tf.gfile.Exists(train_log_dir):
  tf.gfile.MakeDirs(train_log_dir)

with tf.Graph().as_default():
    dataset = dataset_factory.get_dataset(
        cve_diseases, train, dataset_dir)


    provider = slim.dataset_data_provider.DatasetDataProvider(
          dataset,
          num_readers=4,
          common_queue_capacity=20 * FLAGS.batch_size,
          common_queue_min=10 * FLAGS.batch_size)


    [image, label] = provider.get(['image', 'label'])
